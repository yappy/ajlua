apply plugin: 'com.android.library'

def orgRoot = "../../java/liblua"

def versionDesc() {
	def text = 'No version info\n'
	try {
		def proc = 'git describe --always --dirty'.execute()
		proc.waitFor()
		if (proc.exitValue() == 0) {
			text = proc.text.trim() + '\n'
			println('Version info: git-describe = ' + text.trim())
		} else {
			logger.warn('Warning: git describe failed.')
		}
	} catch (e) {
		logger.warn('Warning: git command failed.')
		logger.warn('Warning: Ensure that git command is available.')
	}
	text
}

android {
	compileSdkVersion 27

	defaultConfig {
		minSdkVersion 19
		targetSdkVersion 27
		versionCode 1
		versionName "1.0"

		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

		buildConfigField 'String', 'VERSION_DESC', "\"${versionDesc().trim()}\""
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	sourceSets {
		main {
			java.srcDirs = ["${orgRoot}/src/main/java"]
		}
		test {
			// use default
		}
		androidTest {
			java.srcDirs = ["${orgRoot}/src/test/java"]
		}
	}

	externalNativeBuild {
		cmake {
			path '../../native/CMakeLists.txt'
		}
	}

}

dependencies {
	implementation fileTree(dir: 'libs', include: ['*.jar'])

	implementation 'com.android.support:appcompat-v7:27.1.1'
	testImplementation 'junit:junit:4.12'
	androidTestImplementation 'com.android.support.test:runner:1.0.2'
	androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

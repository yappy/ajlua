import io.github.yappy.LuaEngine;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {

	public static void main(String[] args) throws Exception {
		try (LuaEngine lua = new LuaEngine()) {
			System.out.println(lua.getVersionInt());
			System.out.println(lua.getVersion());
			System.out.println(lua.getRelease());
			System.out.println(lua.getCopyright());
			System.out.println(lua.getAuthor());

			lua.execString("function func(a, b, c) return a, b, c end", "test.lua");
			Object[] results = lua.callGlobalFunction("func", null, true, 3.14);
			System.out.println(java.util.Arrays.toString(results));
		}

		try (LuaEngine lua = new LuaEngine()) {
			lua.addGlobalFunction("jprint", (params) -> {
					System.out.printf("%d parameters%n", params.length);
					for (Object x : params) {
						System.out.println(x);
					}
					return null;
				});
			lua.addGlobalFunction("jget", (params) -> {
					return new Object[] { 3.14, 2 };
				});

			try {
				lua.execString("x, y = jget() jprint(nil, 123, 3.14, \"string\", x * y)", "test.lua");
			} catch (Exception ex) {
				System.out.println(ex.getMessage());
			}
		}
	}

}

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
	public String getGreeting() {
		return "Hello world.";
	}

	public static void main(String[] args) throws Exception {
		System.out.println(new App().getGreeting());
		System.out.println(new Library().someLibraryMethod());

		String[] info = new String[4];
		int numinfo = LuaEngine.getVersionInfo(info);
		System.out.println(numinfo);
		for (String ver : info) {
			System.out.println(ver);
		}

		try (LuaEngine lua = new LuaEngine()) {
			System.out.println(lua.getPeerForDebug());

			String[] testCode = { "return 1, 2, 3", "function function" };
			for (String str : testCode) {
				try {
					lua.loadString(str, "testchunk.lua");
					lua.pcall(0, LuaEngine.LUA_MULTRET);
					System.out.println("OK");
				} catch(Exception e) {
					e.printStackTrace();
				}
				System.out.println("top=" + lua.getTop(lua.getPeerForDebug()));

				byte[] types = new byte[LuaEngine.MAX_STACK];
				Object[] vals = new Object[LuaEngine.MAX_STACK];
				lua.getValues(lua.getPeerForDebug(), types, vals);
				System.out.println(java.util.Arrays.toString(types));
				System.out.println(java.util.Arrays.toString(vals));

				lua.setTop(lua.getPeerForDebug(), 0);
			}
		}

		try (LuaEngine lua = new LuaEngine()) {
			lua.loadString("function func(a, b, c) return a, b, c end", "test.lua");
			lua.pcall(0, 0);
			lua.getGlobal(lua.getPeerForDebug(), "func");
			lua.pushValues(lua.getPeerForDebug(), new Object[]{ null, true, 3.14 });
			lua.pcall(3, LuaEngine.LUA_MULTRET);
			byte[] types = new byte[LuaEngine.MAX_STACK];
			Object[] vals = new Object[LuaEngine.MAX_STACK];
			lua.getValues(lua.getPeerForDebug(), types, vals);
			System.out.println(java.util.Arrays.toString(types));
			System.out.println(java.util.Arrays.toString(vals));
		}
	}
}
